# This file is a template, and might need editing before it works on your
# project. Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:14

# This folder is cached between builds
# http://docs.gitlab.com/ee/ci/yaml/README.html#cache
cache:
  key:
    files:
      - package.json
      - package-lock.json
  paths:
    - node_modules

stages:
  - build
  - test

build:
  stage: build
  before_script:
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install
      openssh-client -y )'

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work without
    ## extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ##
    ## Use ssh-keyscan to scan the keys of your private server. Replace
    ## gitlab.com with your own domain name. You can copy and repeat that
    ## command if you have more than one server to connect to.
    ##
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    # install instead of ci to take advantage of caching node_modules
    - npm install

tidelift:
  stage: build
  variables:
    # This should be kept in a GitLab Variable. Read more:
    # https://docs.gitlab.com/ee/ci/variables/#create-a-custom-variable-in-the-ui
    TIDELIFT_API_KEY: $TIDELIFT_API_KEY
  script:
    - echo "Downloading Tidelift CLI"
    - curl https://download.tidelift.com/cli/tidelift -o tidelift
    - echo "Setting permissions"
    - chmod +x tidelift
    - echo "Running alignment and saving to Tidelift"
    - ./tidelift alignment save --wait

test:
  stage: test
  before_script:
    # Setting this as a `variable` breaks npm, making it unable to find scripts
    # under `node_modules/.bin` for whatever reason. e.g. `peter: not found`
    # 
    # Setting this DEBUG variable changes peter's behaviour in unexpected
    # ways, including making the assorted xxx-utility programs emit help text
    # on stderr when no command is passed, which peter interprets as an
    # INTERNAL ERROR and a failed test. ~ER2022-05-30
    # 
    # - export DEBUG=tests
    # 
    # Make a random id keystore for testing so that job-utility doesn't throw
    - mkdir ~/.dcp
    - node bin/mkad new id -p ""
  script:
    - npm test
