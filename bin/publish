#!/usr/bin/env node
/**
 *  @file       publish
 *              Utility for deploying DCP Modules from package description files.
 *
 *              A package description file is a JSON file with the following structure:
 *              {
 *                name: string,
 *                version: semver string,
 *                files: {
 *                  [localPathToFile: string]: [destinationFilename: string]
 *                }
 *              }
 *
 *  @author     Ryan Rossiter, ryan@kingsds.network
 *  @date       July 2020
 */

const process = require('process');
const { existsSync } = require('fs');

require('dcp-client');

const { base, getIdentityKeystore } = require('dcp/dcp-cli');
const { publish } = require('dcp/publish');

/**
 * Utility for deploying DCP Modules from package description files.
 */
async function main() {
  const { packageDescription } = base(
    'Utility to publish a new/updated DCP package',
  )
    .command(
      /**
       * Specifying the default command so that specifying the package command
       * is optional.
       */
      ['package <packageDescription>', '$0 <packageDescription>'],
      'Publish a new/updated DCP package from a package description file',
      (yargs) => {
        yargs.positional('packageDescription', {
          describe: 'Path to the package description file.',
          type: 'string',
          /**
           * The key provided represents a path and should have path.normalize()
           * applied.
           */
          normalize: true,
        });
      },
    )
    .strict()
    .parse();

  if (!existsSync(packageDescription)) {
    console.error(
      `Failed to publish package: The file "${packageDescription}" does not exist`,
    );

    return;
  }

  const idKs = await getIdentityKeystore();
  const result = await publish(packageDescription, idKs);
  console.log(
    'Successfully published package:\n',
    JSON.stringify(result, null, 2),
  );
}

main()
  .catch((e) => {
    console.error('Failed to execute command:');
    console.error(e);
    process.exitCode = 1;
  })
  .finally(() => setImmediate(process.exit));
