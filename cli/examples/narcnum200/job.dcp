{
  "name": "Narcissistic decimal number Test Job",
  "version": "0.0.1",
  "public": {
    "name": "a name for you and me too",
    "description": "narcnums numnarcs arcnumns",
    "link": "sparc.network"
  },
  "options": {
    "get": {

    },
    "put": {

    }
  },
  "type": "static",
  "dependencies": {

  },
  "command": {
    "fn": "() => {/** @file\tfn.js\t        Function for narcnum example\r\n *  @author\tMatthew Palma\r\n *  @date\tMatch 2018\r\n */\r\n\r\nfor (let i = 0, count = 0; count < 25; i++) {\r\n  if (i % 100000 == 0)\r\n    s.ping(i / 9926315);\r\n  if (s.isNarc(i)) {\r\n    s.outB[count] = i;\r\n    count++;\r\n  }\r\n}};",
    "setup": "() => {/** @file\tsetup.js\t            Setup state for narcnum example. Will\r\n *                              be parsed as a function body and used as a\r\n *                              template literal.\r\n *  @author\tMatthew Palma\r\n *  @date\tMarch 2018\r\n */\r\n\r\ns.outB = new Float64Array(outB);\r\n\r\ns.isNarc = (x) => {\r\n  let str = x+\"\";\r\n  let sum = 0;\r\n  let len = str.length;\r\n\r\n  if (x < 0) {\r\n    return false;\r\n  }\r\n  else {\r\n    for (let i = 0; i < len; i++) {\r\n      sum += Math.pow(str.charAt(i), len);\r\n    }\r\n  }\r\n\r\n  return sum == x;\r\n};\r\n\r\ns.ping = (progress) => {\r\n  postMessage({\r\n    response : 'progress',\r\n    data     : progress\r\n  });\r\n};};",
    "sort": 0,
    "sliceByN": 1,
    "slices": [
      {
        "data": [
          1,
          1000,
          1
        ]
      }
    ],
    "worker": "run",
    "options": {
      "input": {
        "dataType": "n64"
      },
      "output": {
        "dataType": 64,
        "length": 25
      }
    }
  }
}
