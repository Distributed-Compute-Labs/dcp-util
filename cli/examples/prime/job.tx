{
  "owner": "0x84fc9cd2414b1c7cd7c1dfe245da3f050c9bbf73",
  "message": {
    "exports": {
      "main": {}
    },
    "worker": "/** @file\tworker.js\t        Job for prime number example\n *  @author\tMatt Palma\n *  @date\tFeb 2018\n */\n\nfunction numPrimes(x) {\n  var numPrimes = 0;\n  for (var counter = 0; counter <= x; counter++) {\n\n    var isPrime = true;\n    for (var i = 2; i <= counter; i++) {\n      if (counter % i === 0 && i !== counter)\n        isPrime = false;\n    }\n\n    if (isPrime)\n      numPrimes++;\n  }\n  return numPrimes;\n}\n\nmodule.declare((require, exports, module) => {\n  addEventListener(\"message\", (event) => {\n    if (event.data.request === 'main') {\n      let message = event.data;\n      let results = [];\n      for (let x = 1; x <= message.data[message.start]; x++) {\n        results.push(numPrimes(x));\n        console.log(results)\n        postMessage({\n          request: 'progress',\n          value: x / message.data[message.start]\n        })\n      }\n      postMessage({\n        request : 'complete',\n        result : results\n      });\n    }\n  });\n});\n\nconsole.log('hello')",
    "tests": {
      "timings": {
        "main": 87626.321002841
      },
      "results": [
        {
          "request": "main",
          "data": [
            1,
            2,
            3,
            4
          ],
          "start": 0,
          "end": 1,
          "time": 87.626321002841,
          "speed": 1,
          "result": {
            "request": "complete",
            "result": [
              2
            ]
          }
        }
      ],
      "payment": 0.0000010011787109375
    },
    "payment": 0.0015
  },
  "time": 1529954983928,
  "signature": {
    "r": {
      "type": "Buffer",
      "data": [
        83,
        69,
        158,
        91,
        19,
        42,
        170,
        11,
        39,
        175,
        198,
        114,
        21,
        198,
        141,
        60,
        104,
        29,
        96,
        112,
        2,
        8,
        101,
        53,
        243,
        56,
        238,
        9,
        61,
        192,
        183,
        252
      ]
    },
    "s": {
      "type": "Buffer",
      "data": [
        75,
        216,
        131,
        168,
        93,
        87,
        228,
        74,
        183,
        209,
        13,
        245,
        80,
        234,
        157,
        103,
        137,
        231,
        36,
        69,
        100,
        197,
        118,
        144,
        179,
        60,
        143,
        144,
        46,
        30,
        133,
        211
      ]
    },
    "v": 27
  }
}