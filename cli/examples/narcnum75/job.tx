{"message":{"header":{"to":"betaboard.kingsds.network","from":"0x52367bd74bf66800e0d2ae0dbc7765f3a756c725"},"body":{"name":"Narcissistic decimal number Test Job","version":"0.0.1","public":{"name":"a name for you and me too","description":"narcnums numnarcs arcnumns","link":"sparc.network"},"options":{"get":{},"put":{}},"type":"static","dependencies":{},"command":{"fn":"() => {/** @file\tfn.js\t        Function for narcnum example\r\n *  @author\tMatthew Palma\r\n *  @date\tMatch 2018\r\n */\r\n\r\nlet loops = 75;\r\nfor (let n = 0; n < loops; n++) {\r\n  for (let i = 0, count = 0; count < 25; i++) {\r\n    if (i % 5000000 == 0)\r\n      s.ping(n/loops);\r\n    if (s.isNarc(i)) {\r\n      s.outB[count] = i;\r\n      count++;\r\n    }\r\n  }\r\n}};","setup":"() => {/** @file\tsetup.js\t            Setup state for narcnum example. Will\r\n *                              be parsed as a function body and used as a\r\n *                              template literal.\r\n *  @author\tMatthew Palma\r\n *  @date\tMarch 2018\r\n */\r\n\r\ns.outB = new Float64Array(outB);\r\n\r\ns.isNarc = (x) => {\r\n  let str = x+\"\";\r\n  let sum = 0;\r\n  let len = str.length;\r\n\r\n  if (x < 0) {\r\n    return false;\r\n  }\r\n  else {\r\n    for (let i = 0; i < len; i++) {\r\n      sum += Math.pow(str.charAt(i), len);\r\n    }\r\n  }\r\n\r\n  return sum == x;\r\n};\r\n\r\ns.ping = (progress) => {\r\n  postMessage({\r\n    response : 'progress',\r\n    data     : progress\r\n  });\r\n};};","sort":0,"sliceByN":1,"slices":[{"data":[1,1000,1]}],"worker":"run","options":{"input":{"dataType":"n64"},"output":{"dataType":64,"length":25}}}}},"signature":{"r":[176,182,111,189,67,231,66,105,237,113,137,209,163,207,111,138,186,56,179,57,135,71,206,48,191,228,235,176,254,57,72,211],"s":[68,21,95,155,193,43,204,3,141,219,190,253,56,21,112,209,24,84,236,98,91,211,189,153,23,181,198,4,234,224,141,54],"v":28}}